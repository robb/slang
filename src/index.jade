doctype 5
html
  head
    meta(charset="utf8")
    script(src = "/slang.js", type = "text/javascript")
    link(href = "http://fonts.googleapis.com/css?family=Droid+Sans:700", rel = "stylesheet", type = "text/css")

    style
      body {
        margin: 0
        width:  100%;
        height: 100%;

        background-image: url('./img/broken_noise.png');

        font-family: "Droid Sans", "Helvetica", sans;
        color:       #FFF;

        -webkit-user-select:   none;
        -moz-user-select:      none;
        user-select:           none;
      }

      #dropzone {
        position: fixed;
        top:      0;
        right:    0;
        bottom:   0;
        left:     0;

        display: -webkit-box;
        display: -moz-box;
        display: box;

        -webkit-box-orient: horizontal;
        -moz-box-orient:    horizontal;
        box-orient:         horizontal;

        -webkit-box-pack: center;
        -moz-box-pack:    center;
        box-pack:         center;

        -webkit-box-align:  center;
        -moz-box-align:     center;
        box-align:          center;

        background-size:     cover;
        background-position: center;
      }

      .center {
        text-align:  center;
      }

      #instructions {
        font-weight: 700;
        font-size:   60px;

        text-shadow: 0 2px 1px rgba(0, 0, 0, 0.5),
                     0 0   3px rgba(0, 0, 0, 0.5);
      }

      #dragzone {
        display: none;
      }

      #dragzone p {
        text-shadow: 0 2px 1px rgba(0, 0, 0, 0.5),
                     0 0   3px rgba(0, 0, 0, 0.3);
      }

      .result {
        height: 70px;
        border: 4px solid white;
        margin: 0;

        box-shadow: 0 3px 4px rgba(0, 0, 0, 0.7);

        -webkit-user-select: element;
        -moz-user-select:    element;
        user-select:         element;

        cursor: hand;
        cursor: -webkit-grab;
        cursor: -moz-grab;
        cursor: grab;
      }

      #footer {
        height:    15px;

        position: absolute;
        right:    10px;
        bottom:   10px;
        left:     10px;

        overflow: hidden;

        font-size:   15px;
        text-shadow: 0 2px 1px rgba(0, 0, 0, 0.5),
                     0 0   3px rgba(0, 0, 0, 0.3);

        color: rgba(255, 255, 255, 0.7);
      }

      #footer a {
        text-decoration: none;
        opacity:         1;
        color:           #FFF;
      }

  body
    #dropzone
      .center
        #instructions Drag an image here
        #dragzone
          img(draggable = true).result
          p (Drag me to save)

      #footer
        | Built by
        a(href = 'http://robb.is') Robert Böhnke
        |  – inspired by Rev Dan Catt's
        a(href = 'http://revdancatt.github.com/Flambient/') Flambient

    script(type = "text/javascript")
      var slang = new Slang('#result');

      try {
        var dropzone     = document.querySelector('#dropzone'),
            instructions = document.querySelector('#instructions'),
            dragzone     = document.querySelector('#dragzone'),
            resultImage  = document.querySelector('#dragzone .result'),
            dragHandler  = null;

        dropzone.addEventListener('dragover', function(e) {
          e.preventDefault();
        }, true);

        dropzone.addEventListener('drop', function(e) {
          e.stopPropagation();
          e.preventDefault();

          var reader = new FileReader();

          reader.onload = function(e) {
            // Set up UI
            instructions.innerHTML = 'Processing…';
            dragzone.style.display = 'none';

            console.log(e);

            slang.process(e.target.result, function(error, data) {
              if (error) {
                instructions.innerHTML = "Could not process the image :-/";
                return;
              }

              dropzone.style.backgroundImage = "url(" + data + ")";

              // Set up UI
              instructions.innerHTML = 'Finished';
              dragzone.style.display = 'block';
              resultImage.src        = data;

              // Remove the old drag handler
              if (dragHandler) {
                resultImage.removeEventListener('dragstart', dragHandler);
              }

              // Add drag handler to the result image
              dragHandler = function(e) {
                e.dataTransfer.setData('image/png', data);
              }

              resultImage.addEventListener('dragstart', dragHandler);
            });
          };

          reader.readAsDataURL(e.dataTransfer.files[0]);
        }, true);
      } catch (error) {
        instructions.innerHTML = "Could not process the image :-/";
      }
